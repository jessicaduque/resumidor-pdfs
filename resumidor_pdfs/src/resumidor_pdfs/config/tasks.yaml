read_pdf_task:
  description: >
    Using the path {pdf_path}, access the PDF file
    so that its text can be returned.
  expected_output: >
    A list of strings extracted from the PDF file.
  agent: pdf_reader_agent

analyze_task:
  description: >
    Your purpose is to analyze the recieved list of strings and remove any excessive blank spaces/line breaks.
    Return the list of strings, and apart from removed spaces, don't alter the text.
  expected_output: >
    A TextSections that contains a list with strings that contain the sections of an original text.
  agent: analyzer_agent
  context: [read_pdf_task]

summarize_task:
  description: >
    A structure will be recieved, with a list of a minimum of 1 string. For each string, sequentially
    summarize each one, than concatenate it into the other. When two summaries are joined, make sure
    they continue cohesive.
    At the end, make sure everything makes sense, and is accurate to the content from the original text.
  expected_output: >
    A consise and accurate summmary generated from the recieved text. 
  agent: summarizer_agent
  context: [analyze_task]

format_task:
  description: >
    Format the given summary to match the style of a blog post.
  expected_output: >
    A Markdown-formatted text that has to include:
    - A relevant main title (always the first element of file);
    - Subheadings to organize all the content;
    - A conclusion. 
    The text should be cohesive and properly formatted according to Markdown standards. 
    At the end, guarantee there is a line break for another line that signs off the text 
    in the following format: "Made by Ollama/ChatGPT."
    After formatting it, revise your work to make sure it looks cohesive. 
  agent: formatter_agent
  context: [summarize_task]

